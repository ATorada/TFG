/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visual;

import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Date;
import java.sql.SQLException;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ángel Torada
 */
public final class Gastos extends javax.swing.JFrame {

    private double totalIngresos = 0;
    /**
     * Atributo que permite a AnyadirGasto añadir un gasto creado en la tabla
     * Utilidades
     */
    protected DefaultTableModel modelUtilidades;

    /**
     * Atributo que permite a AnyadirGasto añadir un gasto creado en la tabla
     * Cuentas
     */
    protected DefaultTableModel modelCuentas;

    /**
     * Atributo que permite a AnyadirGasto añadir un gasto creado en la tabla
     * Otros
     */
    protected DefaultTableModel modelOtros;
    //Variable que cambia en base a la tabla seleccionada para poder borrar un gasto
    private int tablaSeleccionada = 0;

    /**
     * Constructor del Frame gasto
     */
    public Gastos() {
        initComponents();

        //Instancia las variables de las tablas
        modelUtilidades = (DefaultTableModel) jTableUtilidades.getModel();
        modelCuentas = (DefaultTableModel) jTableCuentas.getModel();
        modelOtros = (DefaultTableModel) jTableOtros.getModel();

        //Carga todas las tablas de gastos
        cargarTablasDeGastos();

        //Bloquea la selección múltiple
        bloquearSeleccionMultiple();

        //Establece la aparición de la ventana de manera centrada
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonVolver = new javax.swing.JButton();
        jPanelBotones = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUtilidades = new javax.swing.JTable();
        jLabelTotalGastosTitulo = new javax.swing.JLabel();
        jLabelTotalGastos = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableOtros = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCuentas = new javax.swing.JTable();
        jLabelOtros = new javax.swing.JLabel();
        jLabelUtilidades = new javax.swing.JLabel();
        jLabelSuscripciones = new javax.swing.JLabel();
        jLabelProximaCompraGrandeTitulo = new javax.swing.JLabel();
        jLabelProximaCompraGrande = new javax.swing.JLabel();
        jLabelAhorro = new javax.swing.JLabel();
        jSpinnerAhorro = new javax.swing.JSpinner();
        jLabelPorcent = new javax.swing.JLabel();
        jButtonAnyadirElAhorro = new javax.swing.JButton();
        jLabelTotalAAhorrarTitulo = new javax.swing.JLabel();
        jLabelTotalAAhorrar = new javax.swing.JLabel();
        jButtonEliminarGasto = new javax.swing.JButton();
        jButtonAnyadirUnGasto = new javax.swing.JButton();
        jLabelInfoCompraGrande = new javax.swing.JLabel();
        jLabelGastosFlexiblesTitulo = new javax.swing.JLabel();
        jButtonCerrarSesion = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage((new ImageIcon(Login.class.getResource("/Imagenes/Icon.png"))).getImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, -1));

        jPanelBotones.setBackground(new java.awt.Color(249, 246, 248));
        jPanelBotones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanelBotones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableUtilidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Concepto", "Gasto", "Regular", "Unidad Familiar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUtilidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUtilidadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUtilidades);

        jPanelBotones.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 400, 138));

        jLabelTotalGastosTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelTotalGastosTitulo.setText("Total de gastos: ");
        jPanelBotones.add(jLabelTotalGastosTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, -1, -1));

        jLabelTotalGastos.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabelTotalGastos.setText("$");
        jPanelBotones.add(jLabelTotalGastos, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, -1, -1));

        jTableOtros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Concepto", "Gasto", "Regular", "Unidad Familiar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOtros.setColumnSelectionAllowed(true);
        jTableOtros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableOtrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableOtros);
        jTableOtros.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanelBotones.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 400, 210));

        jTableCuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Concepto", "Gasto", "Regular", "Unidad Familiar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCuentas.setColumnSelectionAllowed(true);
        jTableCuentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCuentasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCuentas);
        jTableCuentas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanelBotones.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 400, 150));

        jLabelOtros.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabelOtros.setText("Otros");
        jPanelBotones.add(jLabelOtros, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, -1, -1));

        jLabelUtilidades.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabelUtilidades.setText("Utilidades");
        jPanelBotones.add(jLabelUtilidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));

        jLabelSuscripciones.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jLabelSuscripciones.setText("Cuentas");
        jPanelBotones.add(jLabelSuscripciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, -1, -1));

        jLabelProximaCompraGrandeTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelProximaCompraGrandeTitulo.setText("Próxima Compra Grande:");
        jPanelBotones.add(jLabelProximaCompraGrandeTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 450, -1, -1));

        jLabelProximaCompraGrande.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabelProximaCompraGrande.setText("$");
        jPanelBotones.add(jLabelProximaCompraGrande, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 450, -1, -1));

        jLabelAhorro.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelAhorro.setText("Ahorro");
        jPanelBotones.add(jLabelAhorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, -1, -1));

        jSpinnerAhorro.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        jSpinnerAhorro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinnerAhorroMouseClicked(evt);
            }
        });
        jPanelBotones.add(jSpinnerAhorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 80, -1));

        jLabelPorcent.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelPorcent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPorcent.setText("%");
        jPanelBotones.add(jLabelPorcent, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 20, 20));

        jButtonAnyadirElAhorro.setText("Añadir el Ahorro");
        jButtonAnyadirElAhorro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAnyadirElAhorroMouseClicked(evt);
            }
        });
        jButtonAnyadirElAhorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirElAhorroActionPerformed(evt);
            }
        });
        jPanelBotones.add(jButtonAnyadirElAhorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, -1, -1));

        jLabelTotalAAhorrarTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelTotalAAhorrarTitulo.setText("Total a ahorrar:");
        jPanelBotones.add(jLabelTotalAAhorrarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, -1, 20));

        jLabelTotalAAhorrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelTotalAAhorrar.setText("$");
        jPanelBotones.add(jLabelTotalAAhorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 310, -1, 20));

        jButtonEliminarGasto.setText("Eliminar Gasto Seleccionado");
        jButtonEliminarGasto.setEnabled(false);
        jButtonEliminarGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarGastoActionPerformed(evt);
            }
        });
        jPanelBotones.add(jButtonEliminarGasto, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, 220, 30));

        jButtonAnyadirUnGasto.setText("Añadir un Gasto");
        jButtonAnyadirUnGasto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAnyadirUnGastoMouseClicked(evt);
            }
        });
        jButtonAnyadirUnGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirUnGastoActionPerformed(evt);
            }
        });
        jPanelBotones.add(jButtonAnyadirUnGasto, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, 150, 30));

        jLabelInfoCompraGrande.setText("🛈");
        jLabelInfoCompraGrande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelInfoCompraGrandeMouseClicked(evt);
            }
        });
        jPanelBotones.add(jLabelInfoCompraGrande, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, -1, -1));

        getContentPane().add(jPanelBotones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 840, 510));

        jLabelGastosFlexiblesTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 24)); // NOI18N
        jLabelGastosFlexiblesTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGastosFlexiblesTitulo.setText("GASTOS");
        getContentPane().add(jLabelGastosFlexiblesTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 70, 450, -1));

        jButtonCerrarSesion.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButtonCerrarSesion.setText("Cerrar Sesión");
        jButtonCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCerrarSesionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCerrarSesionMouseExited(evt);
            }
        });
        jButtonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 130, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoMoradoGrande.png"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 900, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Botón que se encarga de volver a la pantalla principal
    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        Main.INSTANCE.setVisible(true);
        Main.INSTANCE.establecerGastosEIngresos();
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    //Botón que se encarga de cerrar sesión
    private void jButtonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionActionPerformed
        Main.INSTANCE.dispose();
        Login.INSTANCE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarSesionActionPerformed

    //Botón que se encarga de borrar un gasto seleccionado
    private void jButtonEliminarGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarGastoActionPerformed
        //En base a la tabla seleccionada elimina el gasto seleccionado
        switch (tablaSeleccionada) {
            case 0:
                try {
                Login.CONTROLADOR.deleteGastoIngreso(Login.USUARIO, jTableUtilidades.getValueAt(jTableUtilidades.getSelectedRow(), 0).toString());
                jLabelTotalGastos.setText(String.valueOf(Double.valueOf(jLabelTotalGastos.getText()) - Double.valueOf(jTableUtilidades.getValueAt(jTableUtilidades.getSelectedRow(), 1).toString())));
                modelUtilidades.removeRow(jTableUtilidades.getSelectedRow());
                jButtonEliminarGasto.setEnabled(false);
            } catch (SQLException ex) {
                Logger.getLogger(Gastos.class.getName()).log(Level.SEVERE, null, ex);
            }

            break;

            case 1:
                try {
                Login.CONTROLADOR.deleteGastoIngreso(Login.USUARIO, jTableCuentas.getValueAt(jTableCuentas.getSelectedRow(), 0).toString());
                jLabelTotalGastos.setText(String.valueOf(Double.valueOf(jLabelTotalGastos.getText()) - Double.valueOf(jTableCuentas.getValueAt(jTableCuentas.getSelectedRow(), 1).toString())));
                modelCuentas.removeRow(jTableCuentas.getSelectedRow());
                jButtonEliminarGasto.setEnabled(false);
            } catch (SQLException ex) {
                Logger.getLogger(Gastos.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
            case 2:
                try {
                Login.CONTROLADOR.deleteGastoIngreso(Login.USUARIO, jTableOtros.getValueAt(jTableOtros.getSelectedRow(), 0).toString());
                jLabelTotalGastos.setText(String.valueOf(Double.valueOf(jLabelTotalGastos.getText()) - Double.valueOf(jTableOtros.getValueAt(jTableOtros.getSelectedRow(), 1).toString())));
                modelOtros.removeRow(jTableOtros.getSelectedRow());
                jButtonEliminarGasto.setEnabled(false);
            } catch (SQLException ex) {
                Logger.getLogger(Gastos.class.getName()).log(Level.SEVERE, null, ex);
            }
            break;
        }
    }//GEN-LAST:event_jButtonEliminarGastoActionPerformed

    //Listeners que escuchan el click en una tabla, eliminan las selecciones en las otras tablas y establecen un valor a la variable tablaSeleccionada
    private void jTableUtilidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUtilidadesMouseClicked
        jButtonEliminarGasto.setEnabled(true);
        tablaSeleccionada = 0;
        jTableCuentas.clearSelection();
        jTableOtros.clearSelection();
    }//GEN-LAST:event_jTableUtilidadesMouseClicked

    private void jTableCuentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCuentasMouseClicked
        jButtonEliminarGasto.setEnabled(true);
        tablaSeleccionada = 1;
        jTableUtilidades.clearSelection();
        jTableOtros.clearSelection();
    }//GEN-LAST:event_jTableCuentasMouseClicked

    private void jTableOtrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableOtrosMouseClicked
        jButtonEliminarGasto.setEnabled(true);
        tablaSeleccionada = 2;
        jTableCuentas.clearSelection();
        jTableUtilidades.clearSelection();
    }//GEN-LAST:event_jTableOtrosMouseClicked

    //Botón que se encarga de abrir un Dialog de AnyadirGasto
    private void jButtonAnyadirUnGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirUnGastoActionPerformed
        AnyadirGasto anyadirGasto = new AnyadirGasto(this, true);
        anyadirGasto.setVisible(true);
    }//GEN-LAST:event_jButtonAnyadirUnGastoActionPerformed

    //Listener en un Label que da información sobre la compra grande
    private void jLabelInfoCompraGrandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelInfoCompraGrandeMouseClicked
        JOptionPane.showMessageDialog(this, "El gasto de la compra grande se añade automáticamente al gasto total."
                + "\nPara modificarlo deberá acudir al respectivo apartado", "Información sobre la compra grande", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelInfoCompraGrandeMouseClicked

    //Listeners que cambian el color on Hover de cerrar sesión
    private void jButtonCerrarSesionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionMouseEntered
        jButtonCerrarSesion.setBackground(new Color(255, 102, 102));
        jButtonCerrarSesion.setForeground(Color.white);
    }//GEN-LAST:event_jButtonCerrarSesionMouseEntered

    private void jButtonCerrarSesionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionMouseExited
        jButtonCerrarSesion.setBackground(Color.white);
        jButtonCerrarSesion.setForeground(Color.black);
    }//GEN-LAST:event_jButtonCerrarSesionMouseExited

    //Listeners que desactivan el botón de eliminar en caso de que se de al botón de añadir o de ahorro
    private void jButtonAnyadirUnGastoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAnyadirUnGastoMouseClicked
        jButtonEliminarGasto.setEnabled(false);
    }//GEN-LAST:event_jButtonAnyadirUnGastoMouseClicked

    private void jButtonAnyadirElAhorroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAnyadirElAhorroMouseClicked

    }//GEN-LAST:event_jButtonAnyadirElAhorroMouseClicked

    private void jSpinnerAhorroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinnerAhorroMouseClicked
        jButtonEliminarGasto.setEnabled(false);
    }//GEN-LAST:event_jSpinnerAhorroMouseClicked

    //Botón que se encarga de añadir el ahorro
    private void jButtonAnyadirElAhorroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirElAhorroActionPerformed
        //En caso de que no exista un ahorro se inserta un gasto de formato ahorro con el % que ha introducido el usuario
        if (jLabelTotalAAhorrar.getText().equals("0")) {
            double cantidad = (Integer.valueOf(jSpinnerAhorro.getValue().toString()) * totalIngresos) / 100;
            try {
                Login.CONTROLADOR.insertarGastoIngreso(Login.USUARIO, "ahorro", cantidad, false, false, false, "ahorro");
                anyadirUnGasto(new BigDecimal(cantidad - Double.valueOf(jLabelTotalAAhorrar.getText())).setScale(2, RoundingMode.HALF_DOWN).doubleValue());
                jLabelTotalAAhorrar.setText(new BigDecimal(cantidad).setScale(2, RoundingMode.HALF_DOWN).toString());
                jButtonAnyadirElAhorro.setText("Modificar ahorro");
            } catch (SQLException ex) {
                Logger.getLogger(Gastos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //En caso de que exista un ahorro lo modifica
            try {
                double cantidad = (Double.valueOf(jSpinnerAhorro.getValue().toString()) * totalIngresos) / 100;
                Login.CONTROLADOR.actualizarAhorro(Login.USUARIO, cantidad);
                anyadirUnGasto(new BigDecimal(cantidad - Double.valueOf(jLabelTotalAAhorrar.getText())).setScale(2, RoundingMode.HALF_DOWN).doubleValue());
                jLabelTotalAAhorrar.setText(new BigDecimal(cantidad).setScale(2, RoundingMode.HALF_DOWN).toString());

            } catch (SQLException ex) {

            }
        }
    }//GEN-LAST:event_jButtonAnyadirElAhorroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnyadirElAhorro;
    private javax.swing.JButton jButtonAnyadirUnGasto;
    private javax.swing.JButton jButtonCerrarSesion;
    private javax.swing.JButton jButtonEliminarGasto;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelAhorro;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelGastosFlexiblesTitulo;
    private javax.swing.JLabel jLabelInfoCompraGrande;
    private javax.swing.JLabel jLabelOtros;
    private javax.swing.JLabel jLabelPorcent;
    private javax.swing.JLabel jLabelProximaCompraGrande;
    private javax.swing.JLabel jLabelProximaCompraGrandeTitulo;
    private javax.swing.JLabel jLabelSuscripciones;
    private javax.swing.JLabel jLabelTotalAAhorrar;
    private javax.swing.JLabel jLabelTotalAAhorrarTitulo;
    private javax.swing.JLabel jLabelTotalGastos;
    private javax.swing.JLabel jLabelTotalGastosTitulo;
    private javax.swing.JLabel jLabelUtilidades;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinnerAhorro;
    private javax.swing.JTable jTableCuentas;
    private javax.swing.JTable jTableOtros;
    private javax.swing.JTable jTableUtilidades;
    // End of variables declaration//GEN-END:variables

    //Método que se encarga de cargar la tabla de gastos
    private void cargarTablasDeGastos() {

        //Obtiene todos los gastos
        HashMap gastos = Login.CONTROLADOR.obtenerGastosUsuario(Login.USUARIO, null);
        HashMap ingresos = Login.CONTROLADOR.obtenerIngresosUsuario(Login.USUARIO, null);
        totalIngresos = 0;
        for (Object entry : ingresos.entrySet()) {
            ArrayList atributos = ((Map.Entry<String, ArrayList>) entry).getValue();
            totalIngresos += Double.valueOf(atributos.get(0).toString());
        }
        //Recorre todos los gastos, los añade a su respectiva tabla y los suma
        double gastosTotales = 0;
        for (Object entry : gastos.entrySet()) {
            ArrayList atributos = ((Map.Entry<String, ArrayList>) entry).getValue();
            if (atributos.get(1).equals("utilidades")) {
                modelUtilidades.addRow(new Object[]{((Map.Entry<String, ArrayList>) entry).getKey(), atributos.get(0), atributos.get(2), atributos.get(3)});
            } else if (atributos.get(1).equals("cuentas")) {
                modelCuentas.addRow(new Object[]{((Map.Entry<String, ArrayList>) entry).getKey(), atributos.get(0), atributos.get(2), atributos.get(3)});
            } else if (atributos.get(1).equals("otros")) {
                modelOtros.addRow(new Object[]{((Map.Entry<String, ArrayList>) entry).getKey(), atributos.get(0), atributos.get(2), atributos.get(3)});
            } else if (atributos.get(1).equals("ahorro")) {
                double cantidad = Double.valueOf(atributos.get(0).toString());
                jLabelTotalAAhorrar.setText(String.valueOf(cantidad));
                if (totalIngresos != 0) {
                    jSpinnerAhorro.setValue(new BigDecimal(((cantidad * 100) / totalIngresos)).setScale(2, RoundingMode.HALF_DOWN));
                    jButtonAnyadirElAhorro.setText("Modificar ahorro");
                } else {

                }

            }

            gastosTotales += Double.valueOf(atributos.get(0).toString());
        }
        if (jLabelTotalAAhorrar.getText().equals("$")) {
            jLabelTotalAAhorrar.setText("0");
        }
        //Obtiene la compra grande, hace el cálculo de cuanto tiene que pagar cada mes y lo suma al total de gastos
        ArrayList compraGrande = Login.CONTROLADOR.obtenerCompraGrandeUsuario(Login.USUARIO);
        if (!compraGrande.isEmpty()) {

            int mesesRestantes = (int) ChronoUnit.MONTHS.between(Login.CONTROLADOR.obtenerPeriodoActual().toLocalDate(), ((Date) compraGrande.get(1)).toLocalDate());
            try {
                jLabelProximaCompraGrande.setText(String.valueOf(new BigDecimal(((double) compraGrande.get(2)) / mesesRestantes).setScale(2, RoundingMode.HALF_DOWN)));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "La fecha de tu dispositivo está alterada, revísala.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            jLabelTotalGastos.setText(new BigDecimal(gastosTotales + Double.valueOf(jLabelProximaCompraGrande.getText())).setScale(2, RoundingMode.HALF_DOWN).toString());
        } else {
            jLabelProximaCompraGrande.setText("0");
        }
        jLabelTotalGastos.setText(new BigDecimal(gastosTotales).setScale(2, RoundingMode.HALF_DOWN).toString());

    }

    //Método que bloquea la selección multiple de las tablas
    private void bloquearSeleccionMultiple() {

        jTableUtilidades.setRowSelectionAllowed(true);
        jTableUtilidades.setColumnSelectionAllowed(false);
        jTableUtilidades.setCellSelectionEnabled(false);

        jTableCuentas.setRowSelectionAllowed(true);
        jTableCuentas.setColumnSelectionAllowed(false);
        jTableCuentas.setCellSelectionEnabled(false);

        jTableOtros.setRowSelectionAllowed(true);
        jTableOtros.setColumnSelectionAllowed(false);
        jTableOtros.setCellSelectionEnabled(false);
    }

    /**
     * Método que se encarga de añadir el coste de un nuevo gasto al total de
     * gastos
     *
     * @param gasto
     */
    protected void anyadirUnGasto(double gasto) {
        jLabelTotalGastos.setText(new BigDecimal(Double.valueOf(jLabelTotalGastos.getText()) + gasto).setScale(2, RoundingMode.HALF_DOWN).toString());
    }

}
