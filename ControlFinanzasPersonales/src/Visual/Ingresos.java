/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visual;

import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ángel Torada
 */
public class Ingresos extends javax.swing.JFrame {

    /**
     * Constructor del Frame Ingresos
     */
    public Ingresos() {
        initComponents();
        Locale.setDefault(Locale.GERMANY);
        //Oculta el panel de error
        jPanelErrorConcepto.setVisible(false);

        //Carga la tabla de ingresos
        cargarTablaDeIngresos();

        //Configura la tabla ingresos
        configurarTabla();

        //Establece la aparición de la ventana de manera centrada
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonVolver = new javax.swing.JButton();
        jPanelBotones = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableIngresos = new javax.swing.JTable();
        jLabelIngresoTotalTitulo = new javax.swing.JLabel();
        jLabelIngresoTotal = new javax.swing.JLabel();
        jLabelConcepto = new javax.swing.JLabel();
        jLabelConstante = new javax.swing.JLabel();
        jLabelUnidadFamiliar = new javax.swing.JLabel();
        jButtonAnyadir = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jLabelIngreso = new javax.swing.JLabel();
        jSpinnerIngreso = new javax.swing.JSpinner();
        jCheckBoxConstante = new javax.swing.JCheckBox();
        jCheckBoxUnidadFamiliar = new javax.swing.JCheckBox();
        jTextFieldConcepto = new javax.swing.JTextField();
        jPanelErrorConcepto = new javax.swing.JPanel();
        jLabelGastosFlexiblesTitulo = new javax.swing.JLabel();
        jButtonCerrarSesion = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage((new ImageIcon(Login.class.getResource("/Imagenes/Icon.png"))).getImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, -1));

        jPanelBotones.setBackground(new java.awt.Color(249, 246, 248));
        jPanelBotones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanelBotones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableIngresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Concepto", "Ingreso", "Regular", "Unidad Familiar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableIngresos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableIngresosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableIngresos);

        jPanelBotones.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 430, 114));

        jLabelIngresoTotalTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jLabelIngresoTotalTitulo.setText("Total de ingreso: ");
        jPanelBotones.add(jLabelIngresoTotalTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jLabelIngresoTotal.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabelIngresoTotal.setText("$");
        jPanelBotones.add(jLabelIngresoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        jLabelConcepto.setText("Concepto *");
        jPanelBotones.add(jLabelConcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 22, -1, -1));

        jLabelConstante.setText("Regular");
        jPanelBotones.add(jLabelConstante, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 81, -1, -1));

        jLabelUnidadFamiliar.setText("Unidad Familiar");
        jPanelBotones.add(jLabelUnidadFamiliar, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 109, -1, -1));

        jButtonAnyadir.setText("Añadir");
        jButtonAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirActionPerformed(evt);
            }
        });
        jPanelBotones.add(jButtonAnyadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 129, -1, -1));

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanelBotones.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 129, -1, -1));

        jLabelIngreso.setText("Ingreso");
        jPanelBotones.add(jLabelIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 50, -1, -1));

        jSpinnerIngreso.setModel(new javax.swing.SpinnerNumberModel(0.01d, 0.01d, 99999.99d, 1.0d));
        jSpinnerIngreso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinnerIngresoMouseClicked(evt);
            }
        });
        jPanelBotones.add(jSpinnerIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 48, 113, -1));

        jCheckBoxConstante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxConstanteMouseClicked(evt);
            }
        });
        jPanelBotones.add(jCheckBoxConstante, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 78, -1, -1));

        jCheckBoxUnidadFamiliar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxUnidadFamiliarMouseClicked(evt);
            }
        });
        jPanelBotones.add(jCheckBoxUnidadFamiliar, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 109, -1, -1));

        jTextFieldConcepto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldConceptoMouseClicked(evt);
            }
        });
        jPanelBotones.add(jTextFieldConcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 13, 337, 27));

        jPanelErrorConcepto.setBackground(new java.awt.Color(255, 102, 102));
        jPanelErrorConcepto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanelBotones.add(jPanelErrorConcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 13, 341, 27));

        getContentPane().add(jPanelBotones, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 520, 320));

        jLabelGastosFlexiblesTitulo.setFont(new java.awt.Font("Segoe UI Variable", 1, 24)); // NOI18N
        jLabelGastosFlexiblesTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGastosFlexiblesTitulo.setText("INGRESOS");
        getContentPane().add(jLabelGastosFlexiblesTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 50, 370, -1));

        jButtonCerrarSesion.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButtonCerrarSesion.setText("Cerrar Sesión");
        jButtonCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCerrarSesionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCerrarSesionMouseExited(evt);
            }
        });
        jButtonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 120, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoMorado.png"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Botón que se encarga de volver a la pantalla principal
    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        Main.INSTANCE.setVisible(true);
        Main.INSTANCE.establecerGastosEIngresos();
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    //Botón que se encarga de cerrar la sesión
    private void jButtonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionActionPerformed
        Main.INSTANCE.dispose();
        Login.INSTANCE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarSesionActionPerformed

    //Botón que se encarga de añadir un Ingreso
    private void jButtonAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableIngresos.getModel();
        //Si el concepto no es nulo lo añade, sino muestra el panel de error.
        if (!jTextFieldConcepto.getText().isEmpty()) {
            if (!(jTextFieldConcepto.getText().toLowerCase().replaceAll("\\s", "")).equals("ahorro")) {

                try {
                    Login.CONTROLADOR.insertarGastoIngreso(Login.USUARIO, jTextFieldConcepto.getText(), Double.valueOf(jSpinnerIngreso.getValue().toString()), jCheckBoxConstante.isSelected(), true, jCheckBoxUnidadFamiliar.isSelected(), null);
                    model.addRow(new Object[]{jTextFieldConcepto.getText(), new BigDecimal(Double.valueOf(jSpinnerIngreso.getValue().toString())).setScale(2, RoundingMode.HALF_DOWN), jCheckBoxConstante.isSelected(), jCheckBoxUnidadFamiliar.isSelected()});

                    HashMap gastos = Login.CONTROLADOR.obtenerGastosUsuario(Login.USUARIO, null);
                    for (Object entry : gastos.entrySet()) {
                        ArrayList atributos = ((Map.Entry<String, ArrayList>) entry).getValue();
                        if (atributos.get(1).equals("ahorro")) {
                            double cantidad = Double.valueOf(atributos.get(0).toString());
                            double ingreso = (new BigDecimal(Double.valueOf(jSpinnerIngreso.getValue().toString())).setScale(2, RoundingMode.HALF_DOWN)).doubleValue();
                            double porcentaje = 0;
                            try {
                                porcentaje = (new BigDecimal(((cantidad * 100) / Double.valueOf(jLabelIngresoTotal.getText()))).setScale(2, RoundingMode.HALF_DOWN)).doubleValue();
                            } catch (NumberFormatException e) {
                            }
                            ingreso = ingreso * (porcentaje / 100);
                            Login.CONTROLADOR.actualizarAhorro(Login.USUARIO, (cantidad + ingreso));
                        }
                    }
                    jLabelIngresoTotal.setText(String.valueOf(Double.valueOf(jLabelIngresoTotal.getText()) + Double.valueOf(new BigDecimal(Double.valueOf(jSpinnerIngreso.getValue().toString())).setScale(2, RoundingMode.HALF_DOWN).toString())));
                    jTextFieldConcepto.setText("");
                    jSpinnerIngreso.setValue(0);
                    jCheckBoxConstante.setSelected(false);
                    jCheckBoxUnidadFamiliar.setSelected(false);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Ya existe un ingreso/gasto con ese nombre", "Ingreso no creado", JOptionPane.WARNING_MESSAGE);
                }
                jPanelErrorConcepto.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Para establecer el concepto de ahorro use su respectiva función en Gastos.", "Ingreso no creado", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            jPanelErrorConcepto.setVisible(true);
        }
    }//GEN-LAST:event_jButtonAnyadirActionPerformed

    //Botón que se encarga de elimiar un ingreso
    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableIngresos.getModel();
        int selectedRow = jTableIngresos.getSelectedRow();
        try {
            Login.CONTROLADOR.deleteGastoIngreso(Login.USUARIO, jTableIngresos.getValueAt(selectedRow, 0).toString());

            HashMap gastos = Login.CONTROLADOR.obtenerGastosUsuario(Login.USUARIO, null);

            for (Object entry : gastos.entrySet()) {
                ArrayList atributos = ((Map.Entry<String, ArrayList>) entry).getValue();
                if (atributos.get(1).equals("ahorro")) {
                    double cantidad = Double.valueOf(atributos.get(0).toString());
                    double ingreso = (new BigDecimal(Double.valueOf(jTableIngresos.getValueAt(selectedRow, 1).toString())).setScale(2, RoundingMode.HALF_DOWN)).doubleValue();
                    double porcentaje = 0;
                    try {
                        porcentaje = (new BigDecimal(((cantidad * 100) / Double.valueOf(jLabelIngresoTotal.getText()))).setScale(2, RoundingMode.HALF_DOWN)).doubleValue();
                    } catch (NumberFormatException e) {
                    }

                    ingreso = ingreso * (porcentaje / 100);
                    Login.CONTROLADOR.actualizarAhorro(Login.USUARIO, (cantidad - ingreso));
                }
            }
            jLabelIngresoTotal.setText(String.valueOf(Double.valueOf(jLabelIngresoTotal.getText()) - Double.valueOf(jTableIngresos.getValueAt(jTableIngresos.getSelectedRow(), 1).toString())));
            model.removeRow(selectedRow);
            jButtonEliminar.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(Ingresos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    //Listeners que se encargan de poner los colores al on Hover de cerrar sesión
    private void jButtonCerrarSesionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionMouseEntered
        jButtonCerrarSesion.setBackground(new Color(255, 102, 102));
        jButtonCerrarSesion.setForeground(Color.white);
    }//GEN-LAST:event_jButtonCerrarSesionMouseEntered

    private void jButtonCerrarSesionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCerrarSesionMouseExited
        jButtonCerrarSesion.setBackground(Color.white);
        jButtonCerrarSesion.setForeground(Color.black);
    }//GEN-LAST:event_jButtonCerrarSesionMouseExited

    //En caso de clickar en alguna de las casillas de rellenar, el botón de eliminar se desactiva
    private void jTableIngresosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableIngresosMouseClicked
        jButtonEliminar.setEnabled(true);
    }//GEN-LAST:event_jTableIngresosMouseClicked

    private void jTextFieldConceptoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldConceptoMouseClicked
        jButtonEliminar.setEnabled(false);
    }//GEN-LAST:event_jTextFieldConceptoMouseClicked

    private void jSpinnerIngresoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinnerIngresoMouseClicked
        jButtonEliminar.setEnabled(false);
    }//GEN-LAST:event_jSpinnerIngresoMouseClicked

    private void jCheckBoxConstanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxConstanteMouseClicked
        jButtonEliminar.setEnabled(false);
    }//GEN-LAST:event_jCheckBoxConstanteMouseClicked

    private void jCheckBoxUnidadFamiliarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxUnidadFamiliarMouseClicked
        jButtonEliminar.setEnabled(false);
    }//GEN-LAST:event_jCheckBoxUnidadFamiliarMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnyadir;
    private javax.swing.JButton jButtonCerrarSesion;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JCheckBox jCheckBoxConstante;
    private javax.swing.JCheckBox jCheckBoxUnidadFamiliar;
    private javax.swing.JLabel jLabelConcepto;
    private javax.swing.JLabel jLabelConstante;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelGastosFlexiblesTitulo;
    private javax.swing.JLabel jLabelIngreso;
    private javax.swing.JLabel jLabelIngresoTotal;
    private javax.swing.JLabel jLabelIngresoTotalTitulo;
    private javax.swing.JLabel jLabelUnidadFamiliar;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JPanel jPanelErrorConcepto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerIngreso;
    private javax.swing.JTable jTableIngresos;
    private javax.swing.JTextField jTextFieldConcepto;
    // End of variables declaration//GEN-END:variables

    //Método que se encarga de cargar la tabla
    private void cargarTablaDeIngresos() {
        //Obtiene todos los ingresos
        HashMap ingresos = Login.CONTROLADOR.obtenerIngresosUsuario(Login.USUARIO, null);
        DefaultTableModel model = (DefaultTableModel) jTableIngresos.getModel();

        //Por cada ingreso se añade una fila y se suma a un un total de ingresos
        double ingresosTotales = 0;
        for (Object entry : ingresos.entrySet()) {
            ArrayList atributos = ((Map.Entry<String, ArrayList>) entry).getValue();
            model.addRow(new Object[]{((Map.Entry<String, ArrayList>) entry).getKey(), atributos.get(0), atributos.get(1), atributos.get(2)});
            ingresosTotales += Double.valueOf(atributos.get(0).toString());
        }
        jLabelIngresoTotal.setText(new BigDecimal(ingresosTotales).setScale(2, RoundingMode.HALF_DOWN).toString());
    }

    //Método que se encarga de bloquear la selección multiple y de establecer un tamaño a la tabla
    private void configurarTabla() {

        jTableIngresos.setRowSelectionAllowed(true);
        jTableIngresos.setColumnSelectionAllowed(false);
        jTableIngresos.setCellSelectionEnabled(false);

        jTableIngresos.getColumnModel().getColumn(0).setMaxWidth(300);
        jTableIngresos.getColumnModel().getColumn(1).setMaxWidth(100);
        jTableIngresos.getColumnModel().getColumn(2).setMaxWidth(100);
        jTableIngresos.getColumnModel().getColumn(3).setMaxWidth(180);
    }
}
